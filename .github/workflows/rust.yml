name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true

      # Lint, Test, and Build all projects
      - name: Lint, Test, and Build all projects
        run: |
          echo "Locating Cargo.toml files..."
          if [ "${{ runner.os }}" == "Windows" ]; then
            for /f "usebackq delims=" %%f in (`where /r . Cargo.toml`) do (
              set project_dir=%%~dpf
              echo "Processing %project_dir%"
              cd "%project_dir%"

              echo "Running clippy..."
              cargo clippy --all-targets -- -D warnings

              echo "Running tests..."
              cargo test --verbose

              echo "Building..."
              cargo build --verbose --release

              cd "%GITHUB_WORKSPACE%"
            )
          else
            find . -name "Cargo.toml" -print0 | while IFS= read -r -d '' file; do
              project_dir=$(dirname "$file")
              echo "Processing $project_dir"
              cd "$project_dir"

              echo "Running clippy..."
              cargo clippy --all-targets -- -D warnings

              echo "Running tests..."
              cargo test --verbose

              echo "Building..."
              cargo build --verbose --release

              cd "$GITHUB_WORKSPACE"
            done
          fi
        shell: bash
